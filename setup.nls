
;;
; setup procedures


;;
;
to setup-environment
  clear-all
  reset-ticks
  setup-globals

   ask patches [
     set shortest-path-min [0 0 0 0 0 0 0 0 0 0]
     set obstacle [0 0 0 0 0 0 0 0 0 0]
     set safe? [false false false false false false false false false false] ; temporary
   ]
   import-image

end


to import-image
  import-pcolors (word "setup/" input_image);"ligne4v8_modif3.bmp"
  ask patches [set id-special 1]
  
  ; black in image : always obstacles
  ask patches with [pcolor = 0][
    set obstacle [1 1]
    set id-special 0
  ]
  
  ;; additional obstacles
  if existing-obstacles [
    ask patches with [pcolor = 4.5] [
      set obstacle [1 1]
    ]
    ask patches with [pcolor = 14.9] [
      set obstacle [1 0]
    ]
    ask patches with [pcolor = 105] [
      set obstacle [0 1]
    ]
  ]

  ;; input / output : id-special
  ask patches with [pcolor = 44.9] [set id-special "A"]
  ask patches with [pcolor = 126] [set id-special "B"]
  ask patches with [pcolor = 118.1] [set id-special "C"]
  ask patches with [pcolor = 12.9] [set id-special "D"]
  ask patches with [pcolor = 64.3] [set id-special "E"]
  ask patches with [pcolor = 35.6] [set id-special "F"]
  ask patches with [pcolor = 44.3] [set id-special "G"]
  ask patches with [pcolor = 137.1] [set id-special "H"]

  ask patches [set speed-patch 1]
  ask patches with [pcolor = 25.6] [set speed-patch 1.75]
  ask patches with [pcolor = 106.5] [set speed-patch 0.75]

  if existing-obstacles [
    ask patches with [pcolor = 14.9] [set speed-patch speed-at-booth]
    ask patches with [pcolor = 105] [set speed-patch speed-at-booth]
  ]

  color-patches-with-environment

  set max-speed-patch max [speed-patch] of patches
end


;;
; 
to setup-globals
  set repartition-among-paths [0.143 0.214 0.285 0.428 0.571 0.714 0.785 0.856 0.927 1]
  set direction [0 0 0 1 1 0 0 0 1 1]
end


;;
; setup for shortest paths and persons
to setup-agents
  setup-space
  setup-persons-simple
end






;;
; setup shortest paths
to setup-space

   ;; add a "connexification procedure" to ensure flood-fill procedures do not enter an infinite loop
   ;  -> heuristic : keep largest connected component
   keep-largest-connected-component

   ask patches with [id-special = "C"][mark-safe-patch 0]
   flood-fill 0
   ask patches with [id-special = "F"][mark-safe-patch 1]
   flood-fill 1
   ask patches with [id-special = "F"][mark-safe-patch 2]
   flood-fill 2
   ask patches with [id-special = "H"][mark-safe-patch 3]
   flood-fill 3
   ask patches with [id-special = "A"][mark-safe-patch 4]
   flood-fill 4
   ask patches with [id-special = "C"][mark-safe-patch 5]
   flood-fill 5
   ask patches with [id-special = "F"][mark-safe-patch 6]
   flood-fill 6
   ask patches with [id-special = "C"][mark-safe-patch 7]
   flood-fill 7
   ask patches with [id-special = "A"][mark-safe-patch 8]
   flood-fill 8
   ask patches with [id-special = "H"][mark-safe-patch 9]
   flood-fill 9

   ask patches [
     set shortest-path-t shortest-path-min
   ]
end

;;
;
to keep-largest-connected-component
  ask patches with [obstacle != [1 1]][sprout-nodes 1 [set hidden? true]]
  ask nodes [create-links-with (other nodes in-radius 1.4) with [not link-neighbor? myself]]
  nw:set-context nodes links
  foreach but-first (sort-by [count ?1 > count ?2] nw:weak-component-clusters) [
    ask ? [
      ask patch-here [
        ; fail if an entrance was blocked
        if not is-number? id-special [error "Obstacle configuration does not allow a single connected component including all input/output patches"]
        set obstacle [1 1]
      ]
    ]
  ]
  ask links [die] ask nodes [die]
  color-patches-with-environment
end

to setup-persons-simple
  create-persons number-of-persons [
    set hidden? true
    set delay who * 10 / flow-rate-of-persons
    let temp100 random-float 100
    ifelse temp100 < percentage-slow-persons [
      set speed-max 1
      set shape "person slow"
    ][
    set speed-max ratio-speed-fast-slow
    set shape "person"
    ]
    set speed-t speed-max
    set has-arrived? false
    let temp random-float 1
    set id-path  position-in-list temp repartition-among-paths
    set size (world-height + world-width) / 70


  ]
ask persons with [id-path = 0] [
  move-to one-of patches with [id-special = "G"]
  set delay period-between-trains * random (number-of-persons * 10 / flow-rate-of-persons / period-between-trains); + delay mod period-between-trains
  ]



ask persons with [id-path = 1] [
  move-to one-of patches with [id-special = "G"]
   set delay period-between-trains * random  (number-of-persons * 10 / flow-rate-of-persons / period-between-trains); + delay mod period-between-trains
  ]
ask persons with [id-path = 2] [
  move-to one-of patches with [id-special = "D"]]
ask persons with [id-path = 3] [
  move-to one-of patches with [id-special = "D"]]
ask persons with [id-path = 4] [
  move-to one-of patches with [id-special = "D"]]
ask persons with [id-path = 5] [
  move-to one-of patches with [id-special = "B"]
   set delay (period-between-trains / 2) + period-between-trains * random  (number-of-persons * 10 / flow-rate-of-persons / period-between-trains); + delay mod period-between-trains
  ]
ask persons with [id-path = 6] [
  move-to one-of patches with [id-special = "B"]
   set delay (period-between-trains / 2) + period-between-trains * random  (number-of-persons * 10 / flow-rate-of-persons / period-between-trains); + delay mod period-between-trains
  ]
ask persons with [id-path = 7] [
  move-to one-of patches with [id-special = "E"]]
ask persons with [id-path = 8] [
  move-to one-of patches with [id-special = "E"]]
ask persons with [id-path = 9] [
  move-to one-of patches with [id-special = "E"]]
color-persons -1
end




